[pytest]
addopts = -ra
testpaths = tests

[gh-actions]
python =
    3.10: py310, mypy, lint
    3.11: py311, docs

[tox]
envlist = lint, mypy, py{310,311}, docs, coverage-report
isolated_build = true
requires = tox-pdm

[testenv]
description = Run tests and measure coverage.
extras = tests
allowlist_externals = coverage
commands =
    {py310}: coverage run -m pytest -m "not skiponci" {posargs}
    {py310,py311}: pdm run pytest -m "not skiponci" --continue-on-collection-errors {posargs}
parallel_show_output = True
conda_channels =
    default
    conda-forge

[testenv:lint]
description = Run all pre-commit hooks.
basepython = python3.10
skip_install = true
deps = pre-commit
commands = pre-commit run --all-files

[testenv:mypy]
description = Check types
basepython = python3.10
extras = tests
deps = mypy
allowlist_externals = echo
commands = echo $(mypy src)

[testenv:docs]
description = Build docs.
basepython = python3.11
extras = docs
# allowlist_externals = sphinx-build
commands =
    pdm run mkdocs build

[testenv:coverage-report]
description = Report coverage over all test runs.
basepython = python3.10
deps = coverage[toml]>=5.5
skip_install = true
commands =
    coverage combine
    coverage report --omit=src/mvdef/log_utils.py
