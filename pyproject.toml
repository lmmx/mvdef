[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "mvdef"
description = "Package providing command line tools to move/copy function/classes and their associated import statements between files."
readme = "README.md"
requires-python = ">=3.10,<3.12"
license = {text = "MIT"}
authors = [
  {name = "Louis Maddox", email = "louismmx@gmail.com"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11"
]
dependencies = [
  "argcomplete",
  "astor",
  "asttokens",
  "defopt",
  "pyflakes",
  "urllib3<2"
]
dynamic = ["version"] # If you are still pulling version dynamically from a file

# Optional dependencies: these come from your old [tool.pdm.dev-dependencies] tables
[project.optional-dependencies]
ci = [
  "tox",
  "tox-pdm",
  "tox-gh-actions"
]
docs = [
  "mkdocs>=1.5.3",
  "mkdocs-material[recommended,imaging]>=9.5.2",
  "mkdocs-section-index>=0.3.8",
  "mkdocstrings[python]>=0.24.0",
  "urllib3<2"
]
tests = [
  "coverage[toml]>=5.5",
  "pytest",
  "tox"
]
dev = [
  "pre-commit>=4.1.0"
]

[project.scripts]
mvdef = "mvdef.cli:cli_move"
cpdef = "mvdef.cli:cli_copy"
lsdef = "mvdef.cli:cli_list"
oldmvdef = "mvdef.legacy.__main__:main"
oldmvcls = "mvdef.legacy.__main__:mvcls"
oldcpdef = "mvdef.legacy.__main__:cpdef"
oldcpcls = "mvdef.legacy.__main__:cpcls"

[project.urls]
Documentation = "https://mvdef.vercel.app/"
Homepage = "https://github.com/lmmx/mvdef"
Repository = "https://github.com/lmmx/mvdef.git"

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]

[tool.coverage.report]
show_missing = true
skip_covered = true

# Everything else can remain under [tool.*] as before
[tool.coverage.run]
parallel = true
branch = true
source = ["mvdef"]

[tool.isort]
profile = "black"

# If you still use PDMâ€™s file-based version bumping:
[tool.pdm]
version = {path = "src/mvdef/__init__.py", source = "file"}

[tool.pytest.ini_options]
markers = [
  "skiponci: tests that should not run on CI (e.g. CLI display issues)"
]
